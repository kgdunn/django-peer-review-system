# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-27 16:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('basic', '0004_auto_20170727_1854'),
    ]

    operations = [
        migrations.CreateModel(
            name='GradeBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passing_value', models.DecimalField(decimal_places=2, help_text='A value between 0 and 100.', max_digits=5)),
                ('max_score', models.DecimalField(decimal_places=2, default=100, help_text='A value between 0 and 100. Normally this is 100.0', max_digits=5)),
                ('last_updated', models.DateTimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.Course')),
            ],
        ),
        migrations.CreateModel(
            name='GradeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(help_text='Which column order is this item')),
                ('display_name', models.CharField(default='Assignment ...', max_length=250)),
                ('max_score', models.DecimalField(decimal_places=2, default=100, help_text='The largest value a student can achieve for this item', max_digits=5)),
                ('weight', models.DecimalField(decimal_places=3, help_text='The weight of this item; a value between 0.0 and 1.0', max_digits=4)),
                ('spread_evenly', models.BooleanField(default=True, help_text='Spread weight across all items evenly. True: no need to specify weights on the GradeItems. ')),
                ('gradebook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grades.GradeBook')),
            ],
            options={
                'verbose_name': 'Grade Category',
                'verbose_name_plural': 'Grade Categories',
            },
        ),
        migrations.CreateModel(
            name='GradeItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(help_text='Which column order is this item')),
                ('display_name', models.CharField(default='Assignment ...', max_length=250)),
                ('max_score', models.DecimalField(decimal_places=2, default=100, help_text='The largest value a student can achieve for this item', max_digits=5)),
                ('link', models.CharField(blank=True, help_text='The link to the page where the student can complete this; begin link after the base URL: /courseware/...', max_length=600)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, default=-1.0, help_text='The weight of this item; a value between 0.0 and 1.0. If weight=-1.0, then the weight is determined by the category, which will assign equal weight to all items.', max_digits=4)),
                ('droppable', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='grades.GradeCategory')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(blank=True, decimal_places=3, help_text='The grade earned by the learner.', max_digits=7, null=True)),
                ('not_graded_yet', models.BooleanField(default=True, help_text='If this item is not yet graded/submitted/etc')),
                ('modfied_dt', models.DateTimeField(auto_now=True)),
                ('gitem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grades.GradeItem')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.Person')),
            ],
        ),
    ]
